{"remainingRequest":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\src\\views\\playlists.vue?vue&type=template&id=4e7ff7b7&scoped=true","dependencies":[{"path":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\src\\views\\playlists.vue","mtime":1642018121000},{"path":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652033140933},{"path":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\node_modules\\babel-loader\\lib\\index.js","mtime":1652033142260},{"path":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1652033143298},{"path":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652033140933},{"path":"C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1652033142555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPEhlcm8gdGl0bGU9IlBsYXlsaXN0cyIgOmltYWdlPSJpbWFnZSIgLz4KICA8ZGl2IGNsYXNzPSJyaWdodC1zZWN0aW9uLWNvbnRlbnQiPgogICAgPEJ1dHRvbiB0ZXh0PSJDcmVhdGUgYSBQbGF5bGlzdCIgQGNsaWNrPSJvcGVuTW9kYWwiIC8+CiAgICA8ZGl2IGNsYXNzPSJsaXN0LWl0ZW1zIj4KICAgICAgPEl0ZW0KICAgICAgICA6ZGF0YT0ieyAuLi5wbGF5bGlzdCwgaW5kZXggfSIKICAgICAgICB2LWZvcj0iKHBsYXlsaXN0LCBpbmRleCkgaW4gcGxheWxpc3RzIgogICAgICAgIDprZXk9InBsYXlsaXN0LmlkIgogICAgICAvPgogICAgPC9kaXY+CiAgPC9kaXY+CgogIDxNb2RhbCB2LW1vZGVsPSJpc1Nob3dNb2RhbCI+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbCI+CiAgICAgIDxwPlBsYXlsaXN0IE5hbWU8L3A+CiAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iUGxheWxpc3QgTmFtZSIgdi1tb2RlbD0icGxheWxpc3ROYW1lIiAvPgogICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8QnV0dG9uIHRleHQ9IkNhbmNlbCIgQGNsaWNrPSJjbG9zZU1vZGFsIiAvPgogICAgICAgIDxCdXR0b24gdGV4dD0iQ3JlYXRlIiBAY2xpY2s9ImNyZWF0ZU5ld1BsYXlsaXN0IiAvPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvTW9kYWw+Cg=="},{"version":3,"sources":["C:\\Users\\eekar\\OneDrive\\Belgeler\\Git Repo\\spoti-match\\src\\views\\playlists.vue"],"names":[],"mappings":"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","file":"C:/Users/eekar/OneDrive/Belgeler/Git Repo/spoti-match/src/views/playlists.vue","sourceRoot":"","sourcesContent":["<template>\n  <Hero title=\"Playlists\" :image=\"image\" />\n  <div class=\"right-section-content\">\n    <Button text=\"Create a Playlist\" @click=\"openModal\" />\n    <div class=\"list-items\">\n      <Item\n        :data=\"{ ...playlist, index }\"\n        v-for=\"(playlist, index) in playlists\"\n        :key=\"playlist.id\"\n      />\n    </div>\n  </div>\n\n  <Modal v-model=\"isShowModal\">\n    <div class=\"modal\">\n      <p>Playlist Name</p>\n      <input type=\"text\" placeholder=\"Playlist Name\" v-model=\"playlistName\" />\n      <div class=\"buttons\">\n        <Button text=\"Cancel\" @click=\"closeModal\" />\n        <Button text=\"Create\" @click=\"createNewPlaylist\" />\n      </div>\n    </div>\n  </Modal>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { getUserPlaylists, createPlaylist } from \"@/services/spotify\";\nimport Button from \"@/components/button\";\nimport Hero from \"@/components/hero.vue\";\nimport Item from \"@/components/item.vue\";\nconst image = ref(require(\"@/assets/images/hero-2.jpg\"));\nconst isShowModal = ref(false);\nconst playlists = ref([]);\nconst playlistName = ref(\"\");\n\nonMounted(() => {\n  getUserPlaylists().then((res) => {\n    playlists.value = res.items;\n  });\n});\n\nconst openModal = () => {\n  isShowModal.value = true;\n};\n\nconst closeModal = () => {\n  isShowModal.value = false;\n};\n\nconst createNewPlaylist = () => {\n  createPlaylist({\n    name: playlistName.value,\n  }).then(() => {\n    getUserPlaylists().then((res) => {\n      playlists.value = res.items;\n    });\n\n    closeModal();\n  });\n};\n</script>\n<style scoped lang=\"scss\">\n.modal {\n  width: 300px;\n  padding: 30px;\n  box-sizing: border-box;\n  background-color: #fff;\n  font-size: 20px;\n  text-align: center;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin-top: 10px;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n.buttons {\n  display: flex;\n  justify-content: space-between;\n\n  button:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  button {\n    margin-bottom: 0;\n  }\n}\n</style>"]}]}